# Routes
# This file defines all application routes (Higher priority routes first)
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               							controllers.Assets.at(path="/public", file)
# ~~~~
GET     /robots.txt             								controllers.Assets.at(path="/public", file="robots.txt")
GET     /humans.txt             								controllers.Assets.at(path="/public", file="humans.txt")


# Home page
GET     /                       			  					@controllers.Application.index()
GET		/events/create											@controllers.EventController.pageCreate()
POST    /events        			                				@controllers.EventController.save()
#DELETE    /events/:eventId        			                	@controllers.EventController.removeEvent(eventId: String)

POST	/events/analyse											@controllers.EventController.analyse()

POST	/events/getTweets										@controllers.EventController.getTweets()
GET		/events/getTweets/:filename								@controllers.EventController.getTweetsInJson(filename: String)
GET		/events/getTweetStatus									@controllers.EventController.getTweetStatus()
GET		/events/:eventId										@controllers.EventController.pageDetails(eventId: String)
GET		/events/:eventId/listTweetsAsync						@controllers.EventController.listTweetsAsync(eventId: String, page: Integer ?= 1, pageLength: Integer ?= 50)
GET		/events/:eventId/listTweets								@controllers.EventController.listTweets(eventId: String, page: Integer ?= 1, pageLength: Integer ?= 50)
GET		/events/:eventId/analysis/:eventAnalysisId/getTweets 	@controllers.EventController.getTweetsByAnalysis(eventId: String, eventAnalysisId: String, kind: String ?= "positives", page: Integer ?= 1, pageLength: Integer ?= 5)
GET		/events/:eventId/analysis/:eventAnalysisId				@controllers.EventController.pageAnalysisDetails(eventId: String, eventAnalysisId: String, kind: String ?= "positives", page: Integer ?= 1, pageLength: Integer ?= 5)
#DELETE		/events/:eventId/analysis/:eventAnalysisId			@controllers.EventController.removeAnalysis(eventId: String, eventAnalysisId: String)
GET		/events/:eventId/analysis								@controllers.EventController.pageAnalysis(eventId: String, orderBy: String ?= "", order: String ?= "desc")
GET		/events/:eventId/getTotalDiffUsers						@controllers.EventController.getTotalDiffUsers(eventId: String)
GET		/events/:eventId/getTweetsCountPerDay 					@controllers.EventController.getTweetsCountPerDay(eventId: String)
GET		/events/:eventId/listTweetsByDay						@controllers.EventController.listTweetsByDayAsync(eventId: String)
GET		/events/:eventId/getTweetsByDay							@controllers.EventController.getTweetsByDay(eventId: String)

GET		/tools/analyseCheck										@controllers.ToolsController.pageAnalyseCheck()
POST	/tools/analyseCheck										@controllers.ToolsController.analyseCheck()
 
GET		/dictionaries											@controllers.DictionaryController.pageList()
POST	/dictionaries											@controllers.DictionaryController.create()
GET		/dictionaries/statusCreate								@controllers.DictionaryController.statusCreate()
GET		/dictionaries/:dictionaryId								@controllers.DictionaryController.pageDetails(dictionaryId: String)
POST	/dictionaries/addWord									@controllers.DictionaryController.addWord()
GET		/dictionaries/:dictionaryId/getWords					@controllers.DictionaryController.getWords(dictionaryId: String, limit: Int, pageNum: Int)

GET		/abbreviations											@controllers.AbbreviationController.pageList(page: Integer ?= 1, pageLength: Integer ?= 100)
DELETE	/abbreviations											@controllers.AbbreviationController.remove(abbreviationId: String)

